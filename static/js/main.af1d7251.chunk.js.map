{"version":3,"sources":["components/CourseForm.js","components/CourseList.js","App.js","reportWebVitals.js","index.js"],"names":["CourseForm","props","className","onSubmit","AddCourse","type","onChange","UpdateCourse","value","current","CourseList","state","isEdit","renderCourse","details","name","onClick","toggleState","DeleteCourse","index","setState","updateCourseItem","e","preventDefault","editCourse","input","renderUpdateForm","ref","v","defaultValue","this","Component","App","courses","target","length","push","splice","courseList","map","course","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAceA,EAZI,SAACC,GAChB,OACE,8BACE,uBAAMC,UAAU,YAAYC,SAAUF,EAAMG,UAA5C,UACE,uBAAOC,KAAK,OAAOC,SAAUL,EAAMM,aAAcC,MAAOP,EAAMQ,UAC9D,wBAAQJ,KAAK,SAAb,gCCHJK,E,4MAEJC,MAAQ,CACNC,QAAQ,G,EAIVC,aAAe,WACb,OACE,+BACI,+BAAQ,EAAKZ,MAAMa,QAAQC,OAC3B,wBAAQb,UAAU,OAAOc,QAAS,WAAO,EAAKC,eAA9C,oBACA,wBAAQf,UAAU,SAASc,QAAS,WAAO,EAAKf,MAAMiB,aAAa,EAAKjB,MAAMkB,QAA9E,0B,EAMRF,YAAc,WACZ,IAAKL,EAAU,EAAKD,MAAfC,OACL,EAAKQ,SAAS,CAAER,QAASA,K,EAK3BS,iBAAmB,SAACC,GAClBA,EAAEC,iBACF,EAAKtB,MAAMuB,WAAW,EAAKvB,MAAMkB,MAAO,EAAKM,MAAMjB,OACnD,EAAKS,e,EAMPS,iBAAmB,WACjB,OACE,uBAAMxB,UAAU,SAASC,SAAU,EAAKkB,iBAAxC,UACE,uBAAOhB,KAAK,OAAOsB,IAAK,SAACC,GAAO,EAAKH,MAAMG,GAAKC,aAAe,EAAK5B,MAAMa,QAAQC,OAClF,gD,4CAON,WACE,IAAKH,EAAUkB,KAAKnB,MAAfC,OACL,OACE,cAAC,WAAD,UACIA,EAASkB,KAAKJ,mBAAqBI,KAAKjB,qB,GAjDzBkB,aAwDVrB,ICrDTsB,E,4MAEJrB,MAAQ,CACNsB,QAAU,CACR,CAAClB,KAAM,QACP,CAACA,KAAM,OACP,CAACA,KAAM,OAETN,QAAS,I,EAKXF,aAAe,SAACe,GACd,EAAKF,SAAS,CAACX,QAASa,EAAEY,OAAO1B,S,EAInCJ,UAAY,SAACkB,GACXA,EAAEC,iBACF,IAAMd,EAAU,EAAKE,MAAMF,QACrBwB,EAAU,EAAKtB,MAAMsB,QAC3B,KAAGxB,EAAQ0B,QAAU,GAAgB,MAAX1B,GAGpB,OAAO,KAFXwB,EAAQG,KAAK,CAACrB,KAAKN,IACnB,EAAKW,SAAS,CAACa,QAAQA,EAASxB,QAAQ,M,EAK5CS,aAAe,SAACC,GACd,IAAMc,EAAU,EAAKtB,MAAMsB,QAC3BA,EAAQI,OAAOlB,EAAM,GACrB,EAAKC,SAAS,CAACa,a,EAIjBT,WAAa,SAACL,EAAOX,GACnB,IAAIyB,EAAU,EAAKtB,MAAMsB,QACZA,EAAQd,GACf,KAAWX,EACjB,EAAKY,SAAS,CAACa,a,4CAOjB,WAAS,IAAD,OAGAK,EADYR,KAAKnB,MAAhBsB,QACoBM,KAAK,SAACC,EAAQrB,GACvC,OAAS,cAAC,EAAD,CAAYL,QAAS0B,EAAoBrB,MAAOA,EAAOD,aAAc,EAAKA,aAAcM,WAAY,EAAKA,YAAvEL,MAG7C,OACE,qBAAKjB,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mDAEA,cAAC,EAAD,CAAYK,aAAcuB,KAAKvB,aAAcH,UAAW0B,KAAK1B,UAAWK,QAASqB,KAAKnB,MAAMF,UAE5F,mCAAM6B,EAAN,gB,GA7DQP,aAqEHC,IChEAS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.af1d7251.chunk.js","sourcesContent":["import React  from 'react';\r\n\r\nconst CourseForm = (props) => {\r\n    return(\r\n      <div>\r\n        <form className=\"main_form\" onSubmit={props.AddCourse}>\r\n          <input type=\"text\" onChange={props.UpdateCourse} value={props.current} />\r\n          <button type=\"submit\" > Add Course </button>\r\n        </form>\r\n      </div>  \r\n    );\r\n}\r\n\r\n\r\nexport default CourseForm;","import React , { Component ,Fragment } from 'react';\r\n\r\n\r\n\r\nclass CourseList extends Component  {\r\n\r\n  state = {\r\n    isEdit: false\r\n  }\r\n\r\n  // Render Course Form\r\n  renderCourse = () => {\r\n    return(\r\n      <li>\r\n          <span>{ this.props.details.name }</span>\r\n          <button className='edit' onClick={() => {this.toggleState()} } > Edit </button>\r\n          <button className='delete' onClick={() => {this.props.DeleteCourse(this.props.index)} }> Delete </button>\r\n        </li>\r\n    )\r\n  }\r\n\r\n  // toggleState\r\n  toggleState = () => {\r\n    let {isEdit} = this.state;\r\n    this.setState({ isEdit: !isEdit })\r\n  }\r\n\r\n\r\n  // updateCourseItem\r\n  updateCourseItem = (e) => {\r\n    e.preventDefault();\r\n    this.props.editCourse(this.props.index, this.input.value);\r\n    this.toggleState();\r\n\r\n  }\r\n\r\n\r\n  // Render Update Form\r\n  renderUpdateForm = () => {\r\n    return(\r\n      <form className=\"update\" onSubmit={this.updateCourseItem}>\r\n        <input type=\"text\" ref={(v) => {this.input=v} } defaultValue={ this.props.details.name } />\r\n        <button>Update</button>\r\n      </form>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    let {isEdit} = this.state;\r\n    return (\r\n      <Fragment>\r\n        { isEdit ? this.renderUpdateForm() : this.renderCourse() }\r\n      </Fragment>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default CourseList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React , { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport CourseForm from './components/CourseForm';\r\nimport CourseList from './components/CourseList';\r\n\r\n\r\nclass App extends Component  {\r\n\r\n  state = {\r\n    courses : [\r\n      {name: \"HTML\"},\r\n      {name: \"CSS\"},\r\n      {name: \"JS\"}\r\n    ],\r\n    current: ''\r\n  }\r\n  \r\n\r\n  // UpdateCourse\r\n  UpdateCourse = (e) => {\r\n    this.setState({current: e.target.value})\r\n  }\r\n\r\n  // AddCourse\r\n  AddCourse = (e) => {\r\n    e.preventDefault();\r\n    const current = this.state.current;\r\n    const courses = this.state.courses;\r\n    if(current.length >= 1 && current!== \" \"){\r\n      courses.push({name:current});\r\n      this.setState({courses:courses, current:\"\"}); }\r\n    else{ return null } \r\n  }\r\n\r\n  // AddCourse\r\n  DeleteCourse = (index) => { \r\n    const courses = this.state.courses;\r\n    courses.splice(index,1);\r\n    this.setState({courses});\r\n  }\r\n\r\n  // editCourse \r\n  editCourse = (index, value) => {\r\n    let courses = this.state.courses;\r\n    let course = courses[index];\r\n    course['name'] = value;\r\n    this.setState({courses});\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render(){\r\n\r\n    const {courses} = this.state;\r\n    const courseList = courses.map( (course, index) => { \r\n      return ( <CourseList details={course} key={index} index={index} DeleteCourse={this.DeleteCourse} editCourse={this.editCourse} /> );\r\n    })\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n          <h1> Courses Content </h1>\r\n\r\n          <CourseForm UpdateCourse={this.UpdateCourse} AddCourse={this.AddCourse} current={this.state.current} />\r\n\r\n          <ul> {courseList} </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}